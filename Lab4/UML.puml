@startuml
'https://plantuml.com/class-diagram

enum Age {
BABY
KID
TEENAGER
ADULT
SENIOR
}

abstract class Animal {
+String name
+makeNoise()
}
interface Cookable{
+Cook()
}
interface Grinable{
+Grin()
}
interface Holdable{
+Hold()
}
interface Jumpable{
+Jump()
}
interface Knokable{
+Knock()
}
interface Sittable{
+Sit()
}
interface Talkable{
+Talk()
}
interface Walkable{
+Walk()
}
interface Watchable{
+Watch()
}

exception NegativeKnockException
exception IncorrectFileNameException
exception NotIntegerException
exception NotKnockingException

Human <.. Main
Frog <.. Main
Cat <.. Main
NegativeKnockException <.. Main
IncorrectFileNameException <.. Main
NotIntegerException <.. Main
NotKnockingException <.. Main
Talkable <|.. Frog
Watchable <|.. Frog
Sittable <|.. Frog
Animal <|-- Frog
Animal <|-- Cat
Grinable <|.. Cat
Sittable <|.. Cat
Cookable <|.. Human
Holdable <|.. Human
Jumpable <|.. Human
Knokable <|.. Human
Sittable <|.. Human
Talkable <|.. Human
Walkable <|.. Human
Watchable <|.. Human
Age <.. Human

class Human {
-String name
-Age age
+toString()
+Cook()
+Hold(String)
+Jump()
+Sit(String)
+Talk(String)
+Walk()
+Watch()
+Knock()
+hashCode()
+equals(Object)
}

class Main{
{static}+main()
}

class Cat{
+makeNoise()
+Grin()
+Sit()
}

class Frog{
+makeNoise()
+Talk()
+Sit()
+Watch()
}

@enduml